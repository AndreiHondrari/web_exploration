<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version="1.1">

    <style>/* <![CDATA[ */

        @keyframes flash {
            0% {}
            50% {
                fill: red;
                stroke: yellow;
            }
            100% {}
        }

        .invisible {
            display: none;
        }

        .flashable {
            cursor: pointer;
        }

        .flash {
            animation-name: flash;
            animation-duration: 0.25s;
            animation-iteration-count: infinite;
        }

        .grid-toggle-btn {
            transition: fill 0.15s, stroke 0.15s;
            cursor: pointer;
            fill: #024C68;
            stroke: #A67600;
        }

        .grid-toggle-btn.active {
            fill: #62B1D0;
            stroke: #FF2C00;
        }

        .grid-toggle-btn:hover {
            filter: url(#rippleShadow);
        }


    /* ]]> */</style>

    <!-- Filters -->
    <defs>

        <!-- Interface filters & animation -->
        <filter id="rippleShadow" x="-50%" y="-50%"
            width="200%" height="200%">
            <feOffset result="offOut" in="SourceAlpha" dx="0" dy="0"/>
            <feGaussianBlur id="rippleShadowBlur"
                result="blurOut" in="offOut" stdDeviation="5" />
            <feColorMatrix
                in="blurOut"
                result="colorOut"
                type="matrix"
                values="-1  0  0  0  1
                         0 -1  0  0  1
                         0  0 -1  0  1
                         0  0  0  1  0"/>
            <feColorMatrix
                id="rippleShadowOpacity"
                in="colorOut"
                result="opacityOut"
                type="matrix"
                values=" 0  0  0  0  1
                         0  0  0  0  1
                         0  0  0  0  1
                         0  0  0  1  0"/>
            <feBlend in="SourceGraphic" in2="opacityOut" mode="normal" />
        </filter>
        <animate
            xlink:href="#rippleShadowOpacity"
            id="anim-opacity-alternate"
            attributeName="values"
            values="
            0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0;
            0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0;
            0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0"
            dur="0.3s"
            repeatCount="indefinite"
        />
    </defs>

    <defs>
        <pattern id="pattern1"
            patternUnits="userSpaceOnUse"
            x="0" y="0" width="5%" height="10%">
                <line x1="0" y1="0" x2="50%" y2="100%"
                    stroke="red" stroke-width="1%"/>
        </pattern>

        <pattern id="pattern2"
            patternUnits="userSpaceOnUse"
            x="0" y="0" width="100%" height="100%">
            <image xlink:href="castle.jpg" x="0" y="0" height="100%" width="100%" />
        </pattern>
    </defs>

    <!-- Title -->
    <text x="10%" y="10%"
        font-size="2.5vw" fill="white" font-weight="bold">
        SVG Patterns
    </text>

    <!-- drawing zone -->

    <rect x="10%" y="20%" width="20%" height="20%" stroke="green"
    stroke-width="3" fill="url(#pattern1)" />

    <text x="10%" y="55%"
        font-size="110"
        font-weight="bold"
        font-family="sans"
        fill="url(#pattern2)">SOMETEXT</text>

    <text x="10%" y="80%"
        textLength="10%"
        font-size="10vw"
        font-weight="bold"
        font-family="sans"
        fill="url(#pattern2)">

        <tspan>S</tspan><tspan>O</tspan><tspan>M</tspan><tspan>E</tspan>

    </text>

    <!-- END drawing zone -->

    <script><![CDATA[
        let svg = document.querySelector('svg');

        const points = [10, 20, 30, 40, 50, 60, 70, 80, 90];

        for (const x of points) {
            let verticalLine = document.createElementNS(
                "http://www.w3.org/2000/svg", 'line');
            verticalLine.setAttribute('x1', `${x}%`);
            verticalLine.setAttribute('x2', `${x}%`);
            verticalLine.setAttribute('y1', '0%');
            verticalLine.setAttribute('y2', '100%');
            verticalLine.setAttribute('stroke', 'red');
            verticalLine.setAttribute('stroke-width', '2');
            verticalLine.setAttribute('stroke-dasharray', '0.1%,1%');
            verticalLine.classList.add('grid-line');
            svg.appendChild(verticalLine);

            let horizontalLine = document.createElementNS(
                "http://www.w3.org/2000/svg", 'line');
            horizontalLine.setAttribute('y1', `${x}%`);
            horizontalLine.setAttribute('y2', `${x}%`);
            horizontalLine.setAttribute('x1', '0%');
            horizontalLine.setAttribute('x2', '100%');
            horizontalLine.setAttribute('stroke', 'red');
            horizontalLine.setAttribute('stroke-width', '2');
            horizontalLine.setAttribute('stroke-dasharray', '0.1%,1%');
            horizontalLine.classList.add('grid-line');
            svg.appendChild(horizontalLine);


        }

        let toggleRect = document.createElementNS(
            "http://www.w3.org/2000/svg", 'rect');
        toggleRect.setAttribute('x', "95%");
        toggleRect.setAttribute('y', "2.5%");
        toggleRect.setAttribute('height', "5%");
        toggleRect.setAttribute('width', "2.5%");
        toggleRect.setAttribute('stroke-width', "0.5%");
        toggleRect.classList.add("grid-toggle-btn");
        toggleRect.classList.add("active");
        toggleRect.onclick = function() {
            let gridLines = document.querySelectorAll('.grid-line');
            for (const gridLine of gridLines) {
                gridLine.classList.toggle('invisible');
            }
            toggleRect.classList.toggle('active');
        };
        svg.appendChild(toggleRect);

        const shapes = document.querySelectorAll('.flashable');
        for (const shIndex in shapes) {
            const shape = shapes[shIndex];
            shape.onclick = function() {
                shape.classList.add('flash');

                setTimeout(function(){
                    shape.classList.remove('flash');
                }, 500);
            };
        }

    ]]></script>


</svg>
